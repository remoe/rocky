name: windows-x64-Release

on: [push, pull_request, workflow_dispatch]

env:
  VCPKG_BINARY_SOURCES : 'clear;nuget,GitHub,readwrite'
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  VCPKG_VERSION: '2023.04.15'

jobs:

  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ['windows-2019']
        include:
          - os: 'windows-2019'
            triplet: 'x64-windows'
            mono: ''
            VCPKG_WORKSPACE: 'c:/vcpkg_own'

    steps:
    - name: Install Vulkan SDK
      uses: humbletim/install-vulkan-sdk@v1.1.1
      with:
        version: 1.3.243.0
        cache: true

    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Installing vcpkg (windows)
      shell: 'bash'
      run: |
        cmake -E make_directory ${{ matrix.VCPKG_WORKSPACE }}
        cd ${{ matrix.VCPKG_WORKSPACE }}
        # git clone --depth 1 --branch ${{env.VCPKG_VERSION}} https://github.com/microsoft/vcpkg
        git clone https://github.com/microsoft/vcpkg
        cd vcpkg
        git checkout ${{env.VCPKG_VERSION}}
        cd ..
        ./vcpkg/bootstrap-vcpkg.bat -disableMetrics
        ${{ matrix.VCPKG_WORKSPACE }}/vcpkg/vcpkg version

    - name: 'Setup NuGet Credentials'
      working-directory: ${{ matrix.VCPKG_WORKSPACE }}
      shell: 'bash'
      run: |
        ${{ matrix.mono }} `./vcpkg/vcpkg fetch nuget | tail -n 1` \
        sources add \
        -source "https://nuget.pkg.github.com/${{ github.actor }}/index.json" \
        -storepasswordincleartext \
        -name "GitHub" \
        -username "${{ github.actor }}" \
        -password "${{ secrets.GITHUB_TOKEN }}"
        ${{ matrix.mono }} `./vcpkg/vcpkg fetch nuget | tail -n 1` \
          setapikey "${{ secrets.GITHUB_TOKEN }}" \
          -source "https://nuget.pkg.github.com/${{ github.actor }}/index.json"

    - name: Create Build Environment
      run: |
        cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{ runner.workspace }}/build
      # Add the following for vcpkg install debugging: -DVCPKG_INSTALL_OPTIONS=--debug  
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DROCKY_SUPPORTS_GDAL=ON -DCMAKE_TOOLCHAIN_FILE=${{ matrix.VCPKG_WORKSPACE }}/vcpkg/scripts/buildsystems/vcpkg.cmake

    - name: 'Upload cmake configure log artifact'
      uses: actions/upload-artifact@v3
      if: ${{ failure() }}
      with:
        name: cmake-log
        path: |
          ${{ runner.workspace }}/build/CMakeCache.txt
        retention-days: 1

    - name: Build
      working-directory: ${{ runner.workspace }}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE
